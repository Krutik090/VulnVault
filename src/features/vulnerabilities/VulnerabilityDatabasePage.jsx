// =======================================================================
// FILE: src/features/vulnerabilities/VulnerabilityDatabasePage.jsx (NEW FILE)
// =======================================================================
import { useState, useEffect, useMemo } from 'react';
import { getVulnerabilityDatabase } from '../../api/vulnerabilityApi';
import toast from 'react-hot-toast';
import Spinner from '../../components/Spinner';
import DataTable from '../../components/DataTable';
import AddEditVulnModal from './AddEditVulnModal';
import DeleteVulnModal from './DeleteVulnModal';

const AddIcon = () => <svg className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20"><path d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"></path></svg>;
const EditIcon = () => <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path></svg>;
const TrashIcon = () => <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>;

const VulnerabilityDatabasePage = () => {
    const [vulnerabilities, setVulnerabilities] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [vulnToEdit, setVulnToEdit] = useState(null);
    const [vulnToDelete, setVulnToDelete] = useState(null);

    const fetchData = async () => {
        setIsLoading(true);
        try {
            const response = await getVulnerabilityDatabase();
            setVulnerabilities(response.data);
        } catch (error) {
            toast.error("Could not fetch vulnerability database.");
        } finally {
            setIsLoading(false);
        }
    };

    useEffect(() => {
        fetchData();
    }, []);

    const handleSave = () => {
        setIsModalOpen(false);
        setVulnToEdit(null);
        fetchData();
    };

    const columns = useMemo(() => [
        { accessorKey: 'vulnName', header: 'Vulnerability Name' },
        { accessorKey: 'vulnType', header: 'Type' },
        { id: 'actions', header: 'Actions', cell: ({ row }) => (
            <div className="flex items-center space-x-2">
                <button onClick={() => { setVulnToEdit(row.original); setIsModalOpen(true); }} className="p-2 rounded-full text-blue-500 hover:bg-blue-100" title="Edit"><EditIcon /></button>
                <button onClick={() => setVulnToDelete(row.original)} className="p-2 rounded-full text-red-500 hover:bg-red-100" title="Delete"><TrashIcon /></button>
            </div>
        )}
    ], []);

    return (
        <>
            <div className="bg-white shadow rounded-lg">
                <div className="p-6 border-b flex justify-between items-center">
                    <div>
                        <h1 className="text-2xl font-bold text-gray-800">Vulnerability Database</h1>
                        <p className="text-gray-500 mt-1">Manage the central library of predefined vulnerabilities.</p>
                    </div>
                    <button onClick={() => { setVulnToEdit(null); setIsModalOpen(true); }} className="flex items-center px-4 py-2 text-white font-semibold rounded-lg shadow-md" style={{ background: 'linear-gradient(to right, #6366F1, #8B5CF6)' }}>
                        <AddIcon /> Add Vulnerability
                    </button>
                </div>
                {isLoading ? <Spinner /> : <DataTable data={vulnerabilities} columns={columns} />}
            </div>
            <AddEditVulnModal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSave={handleSave} vulnToEdit={vulnToEdit} />
            <DeleteVulnModal vuln={vulnToDelete} onClose={() => setVulnToDelete(null)} onDeleted={fetchData} />
        </>
    );
};

export default VulnerabilityDatabasePage;